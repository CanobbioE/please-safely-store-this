// Code generated by MockGen. DO NOT EDIT.
// Source: ../vault/manager.go
//
// Generated by this command:
//
//	mockgen -package db -source ../vault/manager.go -destination db/vault.go
//

// Package db is a generated GoMock package.
package db

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	model "github.com/CanobbioE/please-safely-store-this/internal/pkg/model"
)

// MockVault is a mock of Vault interface.
type MockVault struct {
	ctrl     *gomock.Controller
	recorder *MockVaultMockRecorder
}

// MockVaultMockRecorder is the mock recorder for MockVault.
type MockVaultMockRecorder struct {
	mock *MockVault
}

// NewMockVault creates a new mock instance.
func NewMockVault(ctrl *gomock.Controller) *MockVault {
	mock := &MockVault{ctrl: ctrl}
	mock.recorder = &MockVaultMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVault) EXPECT() *MockVaultMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockVault) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockVaultMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockVault)(nil).Close))
}

// DeletePasswordEntry mocks base method.
func (m *MockVault) DeletePasswordEntry(service string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePasswordEntry", service)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePasswordEntry indicates an expected call of DeletePasswordEntry.
func (mr *MockVaultMockRecorder) DeletePasswordEntry(service any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePasswordEntry", reflect.TypeOf((*MockVault)(nil).DeletePasswordEntry), service)
}

// GetPasswordEntry mocks base method.
func (m *MockVault) GetPasswordEntry(service string) (*model.PasswordEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPasswordEntry", service)
	ret0, _ := ret[0].(*model.PasswordEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPasswordEntry indicates an expected call of GetPasswordEntry.
func (mr *MockVaultMockRecorder) GetPasswordEntry(service any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPasswordEntry", reflect.TypeOf((*MockVault)(nil).GetPasswordEntry), service)
}

// GetVaultMetadata mocks base method.
func (m *MockVault) GetVaultMetadata() (*model.VaultMetadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVaultMetadata")
	ret0, _ := ret[0].(*model.VaultMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVaultMetadata indicates an expected call of GetVaultMetadata.
func (mr *MockVaultMockRecorder) GetVaultMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVaultMetadata", reflect.TypeOf((*MockVault)(nil).GetVaultMetadata))
}

// Initialize mocks base method.
func (m *MockVault) Initialize() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Initialize")
	ret0, _ := ret[0].(error)
	return ret0
}

// Initialize indicates an expected call of Initialize.
func (mr *MockVaultMockRecorder) Initialize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Initialize", reflect.TypeOf((*MockVault)(nil).Initialize))
}

// ListPasswordEntries mocks base method.
func (m *MockVault) ListPasswordEntries() ([]*model.PasswordEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPasswordEntries")
	ret0, _ := ret[0].([]*model.PasswordEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPasswordEntries indicates an expected call of ListPasswordEntries.
func (mr *MockVaultMockRecorder) ListPasswordEntries() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPasswordEntries", reflect.TypeOf((*MockVault)(nil).ListPasswordEntries))
}

// SavePasswordEntry mocks base method.
func (m *MockVault) SavePasswordEntry(entry *model.PasswordEntry) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SavePasswordEntry", entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// SavePasswordEntry indicates an expected call of SavePasswordEntry.
func (mr *MockVaultMockRecorder) SavePasswordEntry(entry any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SavePasswordEntry", reflect.TypeOf((*MockVault)(nil).SavePasswordEntry), entry)
}

// SaveVaultMetadata mocks base method.
func (m *MockVault) SaveVaultMetadata(v *model.VaultMetadata) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveVaultMetadata", v)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveVaultMetadata indicates an expected call of SaveVaultMetadata.
func (mr *MockVaultMockRecorder) SaveVaultMetadata(v any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveVaultMetadata", reflect.TypeOf((*MockVault)(nil).SaveVaultMetadata), v)
}
